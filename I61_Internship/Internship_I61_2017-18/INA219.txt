Author: Garrett Wells
Dte: 12/11/17

This document is meant to provide a place to store reference information for working with the Adafruit/Texas Instruments INA219 sensor series.


Registers and Their Addresses:
_______________________________________________________________________________
Address(Hexadecimal) | Register Name   | Function                      | Type |
-------------------------------------------------------------------------------
        0x00         | Config Register | All register reset            |  R/W |
-------------------------------------------------------------------------------
        0x01         | Shunt Voltage   | Shunt voltage measurement     |   R  |
-------------------------------------------------------------------------------
        0x02         | Bus Voltage     | Bus voltage measurement       |   R  |
-------------------------------------------------------------------------------
        0x03         | Power           | Current flowing through shunt |   R  | 
-------------------------------------------------------------------------------
        0x04         | Current         | Value of shunt resister       |   R  |
-------------------------------------------------------------------------------
        0x05         | Calibration     |  Overall system calibration   |  R/W |
_______________________________________________________________________________
(1) Type: R = Read-Only, R/W = Read/Write
(2) The Power and current register default is 0 because the calibration register defaults to 0, yielding a zero current value until the calibration
	register is programmed


Writing and Reading Values:

	The INA219 is a i2c device, therefore it must be run using that protocol. On the raspberry pi, the only pins that support i2c are pins 8 and 9. 
In i2c each device is connected using two pins, SDA(data) and SCL(clock). In the interaction between the master and the slave, the master generates the clock 
pulses and either the master or the slave places data on the SDA line.

	1) To start writing to the device, the SDA pin is asserted to LOW(0V).  
	2) The master then transmits the 7-bit address in MSB first + one bit R/W(0 = write, 1 = read). 
	3) Finally, the NACK/ACK bit is transmitted.
	3) To stop transmission the stop condition is generated by the master.
		1- The SCL is driven LOW and then pulled HIGH(0->1).
		2- The SDA is driven LOW and then pulled HIGH(0->1).
		* While writing data on SDA, the SCL should remain LOW. 


